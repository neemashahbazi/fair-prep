python blocking_test.py --dataset "DBLP-ACM" --threshold 0.2 --k 5000 --sensitive_attr "venue" --method "OverlapBlocker"
python blocking_test.py --dataset "DBLP-ACM" --threshold 0.2 --k 10000 --sensitive_attr "venue" --method "OverlapBlocker"
python blocking_test.py --dataset "DBLP-ACM" --threshold 0.2 --k 15000 --sensitive_attr "venue" --method "OverlapBlocker"
python blocking_test.py --dataset "DBLP-ACM" --threshold 0.2 --k 20000 --sensitive_attr "venue" --method "OverlapBlocker"
python blocking_test.py --dataset "DBLP-ACM" --threshold 0.2 --k 25000 --sensitive_attr "venue" --method "OverlapBlocker"

python blocking_test.py --dataset "DBLP-ACM" --threshold 0.1 --k 20000 --sensitive_attr "venue" --method "OverlapBlocker"
python blocking_test.py --dataset "DBLP-ACM" --threshold 0.15 --k 20000 --sensitive_attr "venue" --method "OverlapBlocker"
python blocking_test.py --dataset "DBLP-ACM" --threshold 0.2 --k 20000 --sensitive_attr "venue" --method "OverlapBlocker"
python blocking_test.py --dataset "DBLP-ACM" --threshold 0.25 --k 20000 --sensitive_attr "venue" --method "OverlapBlocker"
python blocking_test.py --dataset "DBLP-ACM" --threshold 0.3 --k 20000 --sensitive_attr "venue" --method "OverlapBlocker"

python blocking_test.py --dataset "DBLP-ACM" --threshold 0.2 --k 1000 --sensitive_attr "venue" --method "Autoencoder"
python blocking_test.py --dataset "DBLP-ACM" --threshold 0.2 --k 2000 --sensitive_attr "venue" --method "Autoencoder"
python blocking_test.py --dataset "DBLP-ACM" --threshold 0.2 --k 3000 --sensitive_attr "venue" --method "Autoencoder"
python blocking_test.py --dataset "DBLP-ACM" --threshold 0.2 --k 4000 --sensitive_attr "venue" --method "Autoencoder"
python blocking_test.py --dataset "DBLP-ACM" --threshold 0.2 --k 5000 --sensitive_attr "venue" --method "Autoencoder"

python blocking_test.py --dataset "DBLP-ACM" --threshold 0.1 --k 3000 --sensitive_attr "venue" --method "Autoencoder"
python blocking_test.py --dataset "DBLP-ACM" --threshold 0.15 --k 3000 --sensitive_attr "venue" --method "Autoencoder"
python blocking_test.py --dataset "DBLP-ACM" --threshold 0.2 --k 3000 --sensitive_attr "venue" --method "Autoencoder"
python blocking_test.py --dataset "DBLP-ACM" --threshold 0.25 --k 3000 --sensitive_attr "venue" --method "Autoencoder"
python blocking_test.py --dataset "DBLP-ACM" --threshold 0.3 --k 3000 --sensitive_attr "venue" --method "Autoencoder"

python blocking_test.py --dataset "DBLP-ACM" --threshold 0.1 --k 1000 --sensitive_attr "venue" --method "Sudowoodo"
python blocking_test.py --dataset "DBLP-ACM" --threshold 0.1 --k 2000 --sensitive_attr "venue" --method "Sudowoodo"
python blocking_test.py --dataset "DBLP-ACM" --threshold 0.1 --k 3000 --sensitive_attr "venue" --method "Sudowoodo"
python blocking_test.py --dataset "DBLP-ACM" --threshold 0.1 --k 4000 --sensitive_attr "venue" --method "Sudowoodo"
python blocking_test.py --dataset "DBLP-ACM" --threshold 0.1 --k 5000 --sensitive_attr "venue" --method "Sudowoodo"

python blocking_test.py --dataset "DBLP-ACM" --threshold 0.05 --k 3000 --sensitive_attr "venue" --method "Sudowoodo"
python blocking_test.py --dataset "DBLP-ACM" --threshold 0.1 --k 3000 --sensitive_attr "venue" --method "Sudowoodo"
python blocking_test.py --dataset "DBLP-ACM" --threshold 0.15 --k 3000 --sensitive_attr "venue" --method "Sudowoodo"
python blocking_test.py --dataset "DBLP-ACM" --threshold 0.2 --k 3000 --sensitive_attr "venue" --method "Sudowoodo"
python blocking_test.py --dataset "DBLP-ACM" --threshold 0.25 --k 3000 --sensitive_attr "venue" --method "Sudowoodo"
# -------------------------------------------------------------------------------------------------------------------------
python blocking_test.py --dataset "Musicbrainz-persons" --threshold 3.0 --k 10000 --sensitive_attr "country" --method "OverlapBlocker"
python blocking_test.py --dataset "Musicbrainz-persons" --threshold 3.0 --k 20000 --sensitive_attr "country" --method "OverlapBlocker"
python blocking_test.py --dataset "Musicbrainz-persons" --threshold 3.0 --k 30000 --sensitive_attr "country" --method "OverlapBlocker"
python blocking_test.py --dataset "Musicbrainz-persons" --threshold 3.0 --k 40000 --sensitive_attr "country" --method "OverlapBlocker"
python blocking_test.py --dataset "Musicbrainz-persons" --threshold 3.0 --k 50000 --sensitive_attr "country" --method "OverlapBlocker"

python blocking_test.py --dataset "Musicbrainz-persons" --threshold 1.0 --k 30000 --sensitive_attr "country" --method "OverlapBlocker"
python blocking_test.py --dataset "Musicbrainz-persons" --threshold 2.0 --k 30000 --sensitive_attr "country" --method "OverlapBlocker"
python blocking_test.py --dataset "Musicbrainz-persons" --threshold 3.0 --k 30000 --sensitive_attr "country" --method "OverlapBlocker"
python blocking_test.py --dataset "Musicbrainz-persons" --threshold 4.0 --k 30000 --sensitive_attr "country" --method "OverlapBlocker"
python blocking_test.py --dataset "Musicbrainz-persons" --threshold 5.0 --k 30000 --sensitive_attr "country" --method "OverlapBlocker"

python blocking_test.py --dataset "Musicbrainz-persons" --threshold 3.0 --k 5000 --sensitive_attr "country" --method "Autoencoder"
python blocking_test.py --dataset "Musicbrainz-persons" --threshold 3.0 --k 10000 --sensitive_attr "country" --method "Autoencoder"
python blocking_test.py --dataset "Musicbrainz-persons" --threshold 3.0 --k 15000 --sensitive_attr "country" --method "Autoencoder"
python blocking_test.py --dataset "Musicbrainz-persons" --threshold 3.0 --k 20000 --sensitive_attr "country" --method "Autoencoder"
python blocking_test.py --dataset "Musicbrainz-persons" --threshold 3.0 --k 25000 --sensitive_attr "country" --method "Autoencoder"

python blocking_test.py --dataset "Musicbrainz-persons" --threshold 1.0 --k 15000 --sensitive_attr "country" --method "Autoencoder"
python blocking_test.py --dataset "Musicbrainz-persons" --threshold 2.0 --k 15000 --sensitive_attr "country" --method "Autoencoder"
python blocking_test.py --dataset "Musicbrainz-persons" --threshold 3.0 --k 15000 --sensitive_attr "country" --method "Autoencoder"
python blocking_test.py --dataset "Musicbrainz-persons" --threshold 4.0 --k 15000 --sensitive_attr "country" --method "Autoencoder"
python blocking_test.py --dataset "Musicbrainz-persons" --threshold 5.0 --k 15000 --sensitive_attr "country" --method "Autoencoder"

python blocking_test.py --dataset "Musicbrainz-persons" --threshold 0.2 --k 2000 --sensitive_attr "country" --method "Sudowoodo"
python blocking_test.py --dataset "Musicbrainz-persons" --threshold 0.2 --k 4000 --sensitive_attr "country" --method "Sudowoodo"
python blocking_test.py --dataset "Musicbrainz-persons" --threshold 0.2 --k 6000 --sensitive_attr "country" --method "Sudowoodo"
python blocking_test.py --dataset "Musicbrainz-persons" --threshold 0.2 --k 8000 --sensitive_attr "country" --method "Sudowoodo"
python blocking_test.py --dataset "Musicbrainz-persons" --threshold 0.2 --k 10000 --sensitive_attr "country" --method "Sudowoodo"

python blocking_test.py --dataset "Musicbrainz-persons" --threshold 0.1 --k 6000 --sensitive_attr "country" --method "Sudowoodo"
python blocking_test.py --dataset "Musicbrainz-persons" --threshold 0.15 --k 6000 --sensitive_attr "country" --method "Sudowoodo"
python blocking_test.py --dataset "Musicbrainz-persons" --threshold 0.2 --k 6000 --sensitive_attr "country" --method "Sudowoodo"
python blocking_test.py --dataset "Musicbrainz-persons" --threshold 0.25 --k 6000 --sensitive_attr "country" --method "Sudowoodo"
python blocking_test.py --dataset "Musicbrainz-persons" --threshold 0.3 --k 6000 --sensitive_attr "country" --method "Sudowoodo"
# -------------------------------------------------------------------------------------------------------------------------
python blocking_test.py --dataset "DBLP-Scholar" --threshold 0.1 --k 100000 --sensitive_attr "venue" --method "OverlapBlocker"
python blocking_test.py --dataset "DBLP-Scholar" --threshold 0.1 --k 125000 --sensitive_attr "venue" --method "OverlapBlocker"
python blocking_test.py --dataset "DBLP-Scholar" --threshold 0.1 --k 150000 --sensitive_attr "venue" --method "OverlapBlocker"
python blocking_test.py --dataset "DBLP-Scholar" --threshold 0.1 --k 175000 --sensitive_attr "venue" --method "OverlapBlocker"
python blocking_test.py --dataset "DBLP-Scholar" --threshold 0.1 --k 200000 --sensitive_attr "venue" --method "OverlapBlocker"

python blocking_test.py --dataset "DBLP-Scholar" --threshold 0.05 --k 150000 --sensitive_attr "venue" --method "OverlapBlocker"
python blocking_test.py --dataset "DBLP-Scholar" --threshold 0.1 --k 150000 --sensitive_attr "venue" --method "OverlapBlocker"
python blocking_test.py --dataset "DBLP-Scholar" --threshold 0.15 --k 150000 --sensitive_attr "venue" --method "OverlapBlocker"
python blocking_test.py --dataset "DBLP-Scholar" --threshold 0.2 --k 150000 --sensitive_attr "venue" --method "OverlapBlocker"
python blocking_test.py --dataset "DBLP-Scholar" --threshold 0.25 --k 150000 --sensitive_attr "venue" --method "OverlapBlocker"

python blocking_test.py --dataset "DBLP-Scholar" --threshold 0.3 --k 5000 --sensitive_attr "venue" --method "Autoencoder"
python blocking_test.py --dataset "DBLP-Scholar" --threshold 0.3 --k 10000 --sensitive_attr "venue" --method "Autoencoder"
python blocking_test.py --dataset "DBLP-Scholar" --threshold 0.3 --k 15000 --sensitive_attr "venue" --method "Autoencoder"
python blocking_test.py --dataset "DBLP-Scholar" --threshold 0.3 --k 20000 --sensitive_attr "venue" --method "Autoencoder"
python blocking_test.py --dataset "DBLP-Scholar" --threshold 0.3 --k 25000 --sensitive_attr "venue" --method "Autoencoder"

python blocking_test.py --dataset "DBLP-Scholar" --threshold 0.2 --k 20000 --sensitive_attr "venue" --method "Autoencoder"
python blocking_test.py --dataset "DBLP-Scholar" --threshold 0.25 --k 20000 --sensitive_attr "venue" --method "Autoencoder"
python blocking_test.py --dataset "DBLP-Scholar" --threshold 0.3 --k 20000 --sensitive_attr "venue" --method "Autoencoder"
python blocking_test.py --dataset "DBLP-Scholar" --threshold 0.35 --k 20000 --sensitive_attr "venue" --method "Autoencoder"
python blocking_test.py --dataset "DBLP-Scholar" --threshold 0.4 --k 20000 --sensitive_attr "venue" --method "Autoencoder"

python blocking_test.py --dataset "DBLP-Scholar" --threshold 0.1 --k 4000 --sensitive_attr "venue" --method "Sudowoodo"
python blocking_test.py --dataset "DBLP-Scholar" --threshold 0.1 --k 8000 --sensitive_attr "venue" --method "Sudowoodo"
python blocking_test.py --dataset "DBLP-Scholar" --threshold 0.1 --k 12000 --sensitive_attr "venue" --method "Sudowoodo"
python blocking_test.py --dataset "DBLP-Scholar" --threshold 0.1 --k 16000 --sensitive_attr "venue" --method "Sudowoodo"
python blocking_test.py --dataset "DBLP-Scholar" --threshold 0.1 --k 20000 --sensitive_attr "venue" --method "Sudowoodo"

python blocking_test.py --dataset "DBLP-Scholar" --threshold 0.05 --k 12000 --sensitive_attr "venue" --method "Sudowoodo"
python blocking_test.py --dataset "DBLP-Scholar" --threshold 0.1 --k 12000 --sensitive_attr "venue" --method "Sudowoodo"
python blocking_test.py --dataset "DBLP-Scholar" --threshold 0.15 --k 12000 --sensitive_attr "venue" --method "Sudowoodo"
python blocking_test.py --dataset "DBLP-Scholar" --threshold 0.2 --k 12000 --sensitive_attr "venue" --method "Sudowoodo"
python blocking_test.py --dataset "DBLP-Scholar" --threshold 0.25 --k 12000 --sensitive_attr "venue" --method "Sudowoodo"
# -------------------------------------------------------------------------------------------------------------------------
python blocking_test.py --datase "Walmart-Amazon" --threshold 5.0 --k 200000 --sensitive_attr "category" --method "OverlapBlocker"
python blocking_test.py --datase "Walmart-Amazon" --threshold 5.0 --k 250000 --sensitive_attr "category" --method "OverlapBlocker"
python blocking_test.py --datase "Walmart-Amazon" --threshold 5.0 --k 300000 --sensitive_attr "category" --method "OverlapBlocker"
python blocking_test.py --datase "Walmart-Amazon" --threshold 5.0 --k 350000 --sensitive_attr "category" --method "OverlapBlocker"
python blocking_test.py --datase "Walmart-Amazon" --threshold 5.0 --k 400000 --sensitive_attr "category" --method "OverlapBlocker"

python blocking_test.py --datase "Walmart-Amazon" --threshold 2.5 --k 300000 --sensitive_attr "category" --method "OverlapBlocker"
python blocking_test.py --datase "Walmart-Amazon" --threshold 5.0 --k 300000 --sensitive_attr "category" --method "OverlapBlocker"
python blocking_test.py --datase "Walmart-Amazon" --threshold 7.5 --k 300000 --sensitive_attr "category" --method "OverlapBlocker"
python blocking_test.py --datase "Walmart-Amazon" --threshold 10.0 --k 300000 --sensitive_attr "category" --method "OverlapBlocker"
python blocking_test.py --datase "Walmart-Amazon" --threshold 12.5 --k 300000 --sensitive_attr "category" --method "OverlapBlocker"

python blocking_test.py --datase "Walmart-Amazon" --threshold 10.0 --k 10000 --sensitive_attr "category" --method "Autoencoder"
python blocking_test.py --datase "Walmart-Amazon" --threshold 10.0 --k 20000 --sensitive_attr "category" --method "Autoencoder"
python blocking_test.py --datase "Walmart-Amazon" --threshold 10.0 --k 30000 --sensitive_attr "category" --method "Autoencoder"
python blocking_test.py --datase "Walmart-Amazon" --threshold 10.0 --k 40000 --sensitive_attr "category" --method "Autoencoder"
python blocking_test.py --datase "Walmart-Amazon" --threshold 10.0 --k 50000 --sensitive_attr "category" --method "Autoencoder"

python blocking_test.py --datase "Walmart-Amazon" --threshold 5.0 --k 30000 --sensitive_attr "category" --method "Autoencoder"
python blocking_test.py --datase "Walmart-Amazon" --threshold 7.5 --k 30000 --sensitive_attr "category" --method "Autoencoder"
python blocking_test.py --datase "Walmart-Amazon" --threshold 10.0 --k 30000 --sensitive_attr "category" --method "Autoencoder"
python blocking_test.py --datase "Walmart-Amazon" --threshold 12.5 --k 30000 --sensitive_attr "category" --method "Autoencoder"
python blocking_test.py --datase "Walmart-Amazon" --threshold 15.0 --k 30000 --sensitive_attr "category" --method "Autoencoder"

python blocking_test.py --datase "Walmart-Amazon" --threshold 1.0 --k 5000 --sensitive_attr "category" --method "Sudowoodo"
python blocking_test.py --datase "Walmart-Amazon" --threshold 1.0 --k 10000 --sensitive_attr "category" --method "Sudowoodo"
python blocking_test.py --datase "Walmart-Amazon" --threshold 1.0 --k 15000 --sensitive_attr "category" --method "Sudowoodo"
python blocking_test.py --datase "Walmart-Amazon" --threshold 1.0 --k 20000 --sensitive_attr "category" --method "Sudowoodo"
python blocking_test.py --datase "Walmart-Amazon" --threshold 1.0 --k 25000 --sensitive_attr "category" --method "Sudowoodo"

python blocking_test.py --datase "Walmart-Amazon" --threshold 0.5 --k 15000 --sensitive_attr "category" --method "Sudowoodo"
python blocking_test.py --datase "Walmart-Amazon" --threshold 1.0 --k 15000 --sensitive_attr "category" --method "Sudowoodo"
python blocking_test.py --datase "Walmart-Amazon" --threshold 1.5 --k 15000 --sensitive_attr "category" --method "Sudowoodo"
python blocking_test.py --datase "Walmart-Amazon" --threshold 2.0 --k 15000 --sensitive_attr "category" --method "Sudowoodo"
python blocking_test.py --datase "Walmart-Amazon" --threshold 2.5 --k 15000 --sensitive_attr "category" --method "Sudowoodo"
# -------------------------------------------------------------------------------------------------------------------------
python blocking_test.py --datase "NoFlyCompas" --threshold 0.1 --k 1000 --sensitive_attr "Ethnic_Code_Text" --method "Sudowoodo"
python blocking_test.py --datase "FacultyMatch" --threshold 0.1 --k 1000 --sensitive_attr "countryabbrv" --method "Sudowoodo"


